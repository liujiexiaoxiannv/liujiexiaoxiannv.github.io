<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[linux常用命令]]></title>
    <url>%2F2019%2F07%2F25%2Flinux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[1 netstat -anp 显示系统端口使用情况 lsof -i :80 显示占用80端口的进程情况 uname -a 内核信息 cat /proc/interrupts 显示中断信息 netstat -ntlp //查看当前所有tcp端口 netstat -ntulp |grep 80 //查看所有80端口使用情况 -t (tcp) 仅显示tcp相关选项 -u (udp)仅显示udp相关选项 -n 拒绝显示别名，能显示数字的全部转化为数字 -l 仅列出在Listen(监听)的服务状态 -p 显示建立相关链接的程序名 netstat -an | grep 3306 //查看所有3306端口使用情况 telnet ip 80 方式测试远程主机80是否打开 2 查看文件内容 cat 可以加more 、less控制输出的内容的大小 cat a.text | more chown -R www:www timeapi 修改timeapi目录为www:www 递归子目录修改： chown -R tuxapp source/ 增加脚本可执行权限： chmod a+x myscript 文本替换 sed sed [options] &apos;command&apos; file(s) 首处替换 sed &apos;s/text/replace_text/&apos; file //替换每一行的第一处匹配的text 全局替换 sed &apos;s/text/replace_text/g&apos; file 移除空白行 sed &apos;/^$/d&apos; file sed &apos;s/book/books/&apos; file #替换文本中的字符串： sed &apos;s/book/books/g&apos; file sed &apos;/^$/d&apos; file #删除空白行 tail -n 24 可以指定显示行数 查看文件的前多少行 head -n100 filename 3 数据流处理awk #统计日志中访问最多的10个IP awk &apos;{a[$1]++}END{for(i in a)print a[i],i|&quot;sort -k1 -nr|head -n10&quot;}&apos; access.log 消除重复行 sort unsort.txt | uniq 4 统计 wc wc -l fileA // 统计A文件行数 wc -w file // 统计单词数 wc -c file // 统计字符数]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[php常用命令]]></title>
    <url>%2F2019%2F07%2F25%2Fphp%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[1、PHP运行指定文件 php -f test.php (-f 可省略) 2、命令行直接运行PHP代码 php -r “phpinfo();” 如果结果太长，还可以 php -r “phpinfo();” | less 分页展示 3、交互模式运行PHP php -a php &gt; echo (2+3); 5 control + c/z 或者 exit 退出交互模式 4、PHP脚本作为shell脚本运行 没有权限则切换到root用户 sudo su echo ‘#!/usr/bin/php\n&lt;?php var_dump($argv); ?&gt;’ &gt; phpscript #累计数据快照 1 0 * * * flock -xn /home/rong/crontab/UnderRepaymentTimeoutdone.lock -c &apos;/usr/bin/php /home/rong/www/time-order/webroot/command.php HistorySnapshot InsertHistoryData&apos; 5、其他常用命令 php -m 内置及Zend加载的模块 php -i 等价于 phpinfo() php -i | grep php.ini 查看php配置文件加载路径 php –ini 同上 php -v 查看php版本 php –version 同上 php –re 查看是否安装相应的扩展 如 php –re gd 6 php -S 这个内置的Web服务器主要用于本地开发使用，不可用于线上产品环境。 如果请求未指定执行哪个PHP文件，则默认执行目录内的index.php 或者 index.html。如果这两个文件都不存在，服务器会返回404错误。 当你在命令行启动这个Web Server时，如果指定了一个PHP文件，则这个文件会作为一个“路由”脚本，意味着每次请求都会先执行这个脚本。如果这个脚本返回 FALSE ，那么直接返回请求的文件（例如请求静态文件不作任何处理）。否则会把输出返回到浏览器。 php -S localhost:8000 服务于当前目录 php -S localhost:8000 -t foo/ 启动时指定根目录 php -S localhost:8000 router.php 使用路由（Router）脚本]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[devops-api notes]]></title>
    <url>%2F2019%2F07%2F22%2Fdevops-api-notes%2F</url>
    <content type="text"><![CDATA[token 暂不需要 关了 magicpush init //生成token //配置token magicpush token –create=xiaoayong –root-token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoicm9vdCIsInVwZGF0ZVRpbWUiOjE1MzA5NDIzNzJ9.-NUb3vqQQYs_83TliNDlXqHcuMlEWP8FDBj2GdDZgyE nohup magicpush server --mode=dev &amp; ##linux 请求头 MAGICPUSH-TOKEN 加上生成的 eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoieGlhb2F5b25nIiwidXBkYXRlVGltZSI6MTUzMDk0MjQ0Nn0.KS1CrMPC5A4sKTMC1AcPoF-soSUmELa8FE5dgZAv1GY 一：http://127.0.0.1:7070/api/v1/sendmsg/dingding post 不要添加请求头 form-data发送一下内容 POST /api/v1/sendmsg/dingding msgType： text|markdown msg: 要发送的消息 title: 发送markdown消息时需要指定此参数，指定标题 url: 可以指定钉钉机器人的URL，这样就不用在conf/app.conf 配置钉钉机器人的URL 注意: 在发送markdown消息时，markdown的语法可以查看官方文档 二 http://127.0.0.1:7070/api/v1/sendmsg/weixin post form-data msgType text 消息类型,目前只支持文本消息 toTag 1 toUser XiaoAYong toParty 3 msg aa 我的脚本执行状况\n[脚本描述：测试]\n[脚本描述：测试]\n[脚本执行时间：20180629]\n 三 设置节假日和工作日 POST /api/v1/holiworkday 2018年 { “year”: “2018”, “holiday”: [ { “name”: “yuandan”, “zh_name”: “元旦”, “start_time”: “2018-01-01”, “end_time”: “2018-01-01” }, { “name”: “chunjie”, “zh_name”: “春节”, “start_time”: “2018-02-15”, “end_time”: “2018-02-21” }, { “name”: “qingming”, “zh_name”: “清明节”, “start_time”: “2018-04-05”, “end_time”: “2018-04-07” }, { “name”: “laodong”, “zh_name”: “劳动节”, “start_time”: “2018-04-29”, “end_time”: “2018-05-01” }, { “name”: “duanwu”, “zh_name”: “端午节”, “start_time”: “2018-06-16”, “end_time”: “2018-06-18” }, { “name”: “zhongqiu”, “zh_name”: “中秋节”, “start_time”: “2018-09-22”, “end_time”: “2018-09-24” }, { “name”: “guoqing”, “zh_name”: “国庆节”, “start_time”: “2018-10-01”, “end_time”: “2018-10-07” } ], “workday”: [ “2018-02-11”, “2018-02-24”, “2018-04-08”, “2018-04-28”, “2018-09-29”, “2018-09-30” ] } 2019年 { “year”: “2019”, “holiday”: [ { “name”: “yuandan”, “zh_name”: “元旦”, “start_time”: “2019-01-01”, “end_time”: “2019-01-01” }, { “name”: “chunjie”, “zh_name”: “春节”, “start_time”: “2019-02-04”, “end_time”: “2019-02-10” }, { “name”: “qingming”, “zh_name”: “清明节”, “start_time”: “2019-04-05”, “end_time”: “2019-04-07” }, { “name”: “laodong”, “zh_name”: “劳动节”, “start_time”: “2019-05-01”, “end_time”: “2019-05-04” }, { “name”: “duanwu”, “zh_name”: “端午节”, “start_time”: “2019-06-07”, “end_time”: “2019-06-09” }, { “name”: “zhongqiu”, “zh_name”: “中秋节”, “start_time”: “2019-09-13”, “end_time”: “2019-09-15” }, { “name”: “guoqing”, “zh_name”: “国庆节”, “start_time”: “2019-10-01”, “end_time”: “2019-10-07” } ], “workday”: [ “2018-02-02”, “2018-02-03”, “2018-04-28”, “2018-05-05”, “2018-09-29”, “2018-10-12” ] } 四 判断给定的日期是节假日工作日周末 GET /api/v1/holiworkday?date=2018-08-25 五 IP地址查询 GET /api/v1/queryip?ip=xxx.xxx.xxx.xxx http://127.0.0.1:7070/api/v1/queryip?ip=47.75.129.108 六 GET /api/v1/queryphone?phone=手机号 http://127.0.0.1:7070/api/v1/queryphone?phone=18612309765 七 windows操作指南 SET CGO_ENABLED=0 SET GOOS=windows go build -o devops-win-amd64.exe main.go start /b devops-win-amd64.exe server –mode=dev 八 方糖server 原始请求 https://sc.ftqq.com/$key.send?text=order_attachment脚本错误&amp;desp=正式服务器 http://127.0.0.1:7070/api/v1/weixin?text=order_attachment脚本错误&amp;desp=正式服务器]]></content>
  </entry>
  <entry>
    <title><![CDATA[talang work notes]]></title>
    <url>%2F2019%2F07%2F22%2Ftalang-work-notes%2F</url>
    <content type="text"><![CDATA[talang–notes sz DashboardController.php 保存服务器文件到本地 php -f encrypt.php &gt;test.txt 再redis-cli SADD time_user_whitelist 84 假如白名单 SISMEMBER time_user_whitelist 333 //判断uid333在不在白名单 SCARD time_user_whitelist //获取集合个数 SMEMBERS key //获取集合所有成员 Ctrl + H 输入^，然后Find All，查找所有的行首 输入$，然后Find All，查找所有的行尾 const NEW_ORDER = 10;//新订单 const AUDIT_LOADING = 40;//审批中 const AUDIT_SUCCESS = 60;//审批成功 const AUDIT_REFUSED = 50;//审批拒绝 const BLACK_REFUSED = 30;//欺诈拒绝 const WAIT_INVESTOR = 75;//待资金方确认 const LENDING_LOADING = 80;//放款处理中 const AGAIN_LENDING = 85;//待重新放款 const LENDING_SUCCESS = 90;//放款成功 const LENDING_FAILED = 100;//放款失败 const ROLLOVER_DEAL = 115;//展期处理中 const PREREPAY_LOADING = 130;//提前还款处理中 const NORMAL_LOADING = 110;//正常还款中 const LOAN_CANCEL = 70;//贷款取消 const PRE_SETTLE = 150;//提前结清 const NORMAL_SETTLE = 140;//正常结清 const OVERDUE_SETTLE = 160;//逾期结清 const OVERDUE = 120;//已逾期 ***core.repayment_plan表里status的值 有 1 2 3 4 5 6 这些状态********** select id,`status` FROM core.repayment_plan where 1=1 GROUP BY `status`; 状态：1 新建，2 成功，3 失败，4 由于提前还款账单取消 5 已申请提前还款 6 还款处理中 7 因提前还款失败而废弃 8 展期处理中 9 展期成功 10 因展期成功而废弃 ***core.repayment_plan表里overdue_status的值 有 0 1 这些状态********** select id,`overdue_status` FROM core.repayment_plan where 1=1 GROUP BY `overdue_status`; 还款计划是否有过逾期 0-未逾过期 1-逾过期 ***core.repayment_fees表里type的值 有 1 2 3 这些状态********** select id,`type` FROM core.repayment_fees where 1=1 GROUP BY `type`; 还款类型，1 一次性服务费,2 正常还款,3 提前还款 ***core.repayment_fees表里fee_type的值 有 1 2 3 4 这些状态********** select id,`fee_type` FROM core.repayment_fees where 1=1 GROUP BY `fee_type`; 还款的费用类型，1 本金,2 利息, 3 一次性服务费, 4 逾期利息 5//展期服务费 ***core.repayment_fees表里status的值 有 1 2 3 4 5 6 这些状态********** select id,`status` FROM core.repayment_fees where 1=1 GROUP BY `status`; 费用状态，已经结清，部分结清，未结清 ???????? 同 状态：1 新建，2 成功，3 失败，4 由于提前还款账单取消 5 已申请提前还款 6 还款处理中 7 因提前还款失败而废弃 8 展期处理中 9 展期成功 10 因展期成功而废弃]]></content>
  </entry>
  <entry>
    <title><![CDATA[hexo笔记]]></title>
    <url>%2F2019%2F07%2F22%2Fhexo%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[hexo安装及常用方式安装及常用命令 npm install -g hexo hexo g ## 生成 hexo s ## 启动服务 打开浏览器访问 http://localhost:4000 即可看到内容 首先，ssh key肯定要配置好。 其次，配置_config.yml中有关deploy的部分： deploy: type: git repository: git@github.com:xay216216/xay216216.github.io.git branch: master hexo s -g #生成并本地预览 hexo d -g #生成并上传 日常hexo操作 在E:\phpStudy\PHPTutorial\WWW\hexo 打开git bash hexo n ‘hexo笔记’ 然后 E:\phpStudy\PHPTutorial\WWW\hexo\source_posts\hexo笔记.md 修改文件 然后保存 hexo s ##启动服务 关掉服务 hexo d -g #生成并上传 友情链接 https://www.jianshu.com/p/3a05351a37dc]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sudo的用法]]></title>
    <url>%2F2019%2F03%2F15%2Fsudo%E7%9A%84%E7%94%A8%E6%B3%95%2F</url>
    <content type="text"><![CDATA[深度linux和ubuntu apt-cache search # ——(package 搜索包) apt-cache show #——(package 获取包的相关信息，如说明、大小、版本等) sudo apt-get install # ——(package 安装包)sudo apt-get install # —–(package - - reinstall 重新安装包) sudo apt-get -f install # —–(强制安装?#”-f = –fix-missing”当是修复安装吧…) sudo apt-get remove #—–(package 删除包) sudo apt-get remove - - purge # ——(package 删除包，包括删除配置文件等) sudo apt-get autoremove –purge # —-(package 删除包及其依赖的软件包+配置文件等（只对6.10有效，强烈推荐）) sudo apt-get update #——更新源 sudo apt-get upgrade #——更新已安装的包 sudo apt-get dist-upgrade # ———升级系统 sudo apt-get dselect-upgrade #——使用 dselect 升级 apt-cache depends #——-(package 了解使用依赖) apt-cache rdepends # ——(package 了解某个具体的依赖?#当是查看该包被哪些包依赖吧…) sudo apt-get build-dep # ——(package 安装相关的编译环境) apt-get source #——(package 下载该包的源代码) sudo apt-get clean &amp;&amp; sudo apt-get autoclean # ——–清理下载文件的存档 &amp;&amp; 只清理过时的包 sudo apt-get check #——-检查是否有损坏的依赖 apt-get install apt-get remove的用法 apt-get remove [–purge] apt-get update apt-cache search的用法 apt-cache search apt-cache show 的用法 apt-cache show apt-cache showpkg 的用法 apt-cache showpkg sudo systemctl start php-fpm sudo systemctl start nginx sudo systemctl enable php-fpm sudo systemctl enable nginx 重启SSH服务，命令：systemctl restart sshd.service centos 7 linux命令 systemctl start mysqld.service 启动mysql服务 systemctl status mysqld.service 查看服务状态 mysql -uroot -p 链接mysql yum list installed | grep php 列出phpan安装的信息 yum remove php70w.x86_64 下载 rpm -qa | grep mysql 查看MySQL安装信息 centos安装PHP7.0 PHP-fpm nginx http://os.51cto.com/art/201703/534277.htm yum -y install epel-release yum -y install nginx rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm yum -y install php70w-fpm php70w-cli php70w-gd php70w-mcrypt php70w-mysql php70w-pear php70w-xml php70w-mbstring php70w-pdo php70w-json php70w-pecl-apcu php70w-pecl-apcu-devel]]></content>
      <tags>
        <tag>sudo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git使用命令]]></title>
    <url>%2F2019%2F03%2F15%2Fgit%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[常用git命令 git clone ** 建仓库 cd 到仓库 git status 查看当前状态 git pull origin master （加入本地现在是master分支） git checkout -b KF-660 基于master分支建一个本地KF-660 git设置alias [alias] st = status co = checkout ci = commit br = branch rt = remote last = log -1 –name-status al = log –pretty=format:’%h %cn -%d %s (%cd)’ –abbrev-commit -30 l = log –graph –pretty=format:’%Cred%h%Creset %Cgreen%cn -%C(cyan)%d%Creset %s %Cgreen(%cd)%Creset’ –abbrev-commit -30 ll = log –name-status –graph –pretty=format:’%Cred%h%Creset %Cgreen%cn -%C(cyan)%d%Creset %s %Cgreen(%cd)%Creset’ –abbrev-commit -10 现在让我们来重置回第一次提交的状态： git status git checkout 文件名 取消修改某文件 git log git reset –hard b7057a9 本地回滚到上次的某个版本号 git status 回滚后,再次查看当前本地分支状态 git add . git commit -m ‘增加’ 提交 git pull origin KF-660 拉去远端最新的KF-660 git push origin KF-660 推到远端KF-660分支 git checkout develop git pull origin develop 拉去最新的develop分支 git merge KF-660 develop分支合KF-660的代码 git push origin develop 推到远端的develop分支推到正式 git checkout master git pull origin master git merge KF-660 git push origin master git tag v1.1.5.35 打一个tag号 git push origin v1.1.5.35 查找问题–查看文件改动 git blame -L 183,+100 app/controllers/web/NewsController.php 查看某个文件第183行的改动记录，取100行记录 git log –pretty=oneline app/controllers/web/NewsController.php 文件的所有的改动历史 查看、添加、提交、删除、找回，重置修改文件 git help # 显示command的help git show # 显示某次提交的内容 git show $id git co – # 抛弃工作区修改 git co . # 抛弃工作区修改 git add # 将工作文件修改提交到本地暂存区 git add . # 将所有修改过的工作文件提交暂存区 git rm # 从版本库中删除文件 git rm –cached # 从版本库中删除文件，但不删除文件 git reset # 从暂存区恢复到工作文件 git reset – . # 从暂存区恢复到工作文件 git reset –hard # 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改 git ci git ci . git ci -a # 将git add, git rm和git ci等操作都合并在一起做 git ci -am “some comments” git ci –amend # 修改最后一次提交记录 git revert &lt;$id&gt; # 恢复某次提交的状态，恢复动作本身也创建次提交对象 git revert HEAD # 恢复最后一次提交的状态 查看文件diff git diff # 比较当前文件和暂存区文件差异 git diff git diff # 比较两次提交之间的差异 git diff .. # 在两个分支之间比较 git diff –staged # 比较暂存区和版本库差异 git diff –cached # 比较暂存区和版本库差异 git diff –stat # 仅仅比较统计信息 查看提交记录 git log git log # 查看该文件每次提交记录 git log -p # 查看每次详细修改内容的diff git log -p -2 # 查看最近两次详细修改内容的diff git log –stat #查看提交统计信息 一般配置 git –version //查看git的版本信息 git config –global user.name //获取当前登录的用户 git config –global user.email //获取当前登录用户的邮箱 git config –global user.name ‘userName’ //设置git账户，userName为你的git账号， git config –global user.email ‘email’ 友情链接 https://sinchie.com/posts/git-remark/比较的是历史区和工作区的差异（修改） git diff master撤回内容(如果修改了工作区的文件后发现改错了，可以用暂存区或者版本库里的文件替换掉工作区的文件)用暂存区中的内容或者版本库中的内容覆盖掉工作区 git checkout index.html取消增加到暂存区的内容（添加时） git reset HEAD index.html//显示目录的状体 有没有添加或者修改文件 git status]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[welcome to kobe's blog]]></title>
    <url>%2F2018%2F09%2F06%2Fwelcome-to-my-blog%2F</url>
    <content type="text"><![CDATA[阿飘莱勇飞趣–认真创造，安静面对，乐观变化，幸福时间，美。]]></content>
  </entry>
</search>
